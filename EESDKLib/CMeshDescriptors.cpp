///============================================================================
/// \file		CMeshDescriptors.cpp
/// \brief		Data file for Mesh Descriptor structures
/// \date		01-30-2009
/// \author		Kenneth Hurley
///         Copyright (c)  2005-2008 Signature Devices, Inc.
///
///         This code is redistributable under the terms of the EE License.
///
///         This code is distributed without warranty or implied warranty of
///			merchantability or fitness for a particular purpose. See the 
///			EE License for more details.
///
///         You should have received a copy of the EE License along with this
///			code; If not, write to Signature Devices, Inc.,
///			3200 Bridge Parkway Suite 102, Redwood City, CA 94086 USA.
///============================================================================

#include "Stdafx.h"

namespace ElementalEngine
{
//  mesh descriptor objects
 CHashString hsz_MESH_STREAM_VERTEX_TEXTURECOORD1(_T("MESH_STREAM_VERTEX_TEXTURECOORD1"));
 ChannelDesc desc_MESH_STREAM_VERTEX_TEXTURECOORD1(&hsz_MESH_STREAM_VERTEX_TEXTURECOORD1, 8);
 CHashString hsz_MESH_STREAM_VERTEX_TEXTURECOORD2(_T("MESH_STREAM_VERTEX_TEXTURECOORD2"));
 ChannelDesc desc_MESH_STREAM_VERTEX_TEXTURECOORD2(&hsz_MESH_STREAM_VERTEX_TEXTURECOORD2,  8 );
 CHashString hsz_MESH_STREAM_VERTEX_TEXTURECOORD3(_T("MESH_STREAM_VERTEX_TEXTURECOORD3"));
 ChannelDesc desc_MESH_STREAM_VERTEX_TEXTURECOORD3(&hsz_MESH_STREAM_VERTEX_TEXTURECOORD3,  8 );
 CHashString hsz_MESH_STREAM_VERTEX_TEXTURECOORD4(_T("MESH_STREAM_VERTEX_TEXTURECOORD4"));
 ChannelDesc desc_MESH_STREAM_VERTEX_TEXTURECOORD4(&hsz_MESH_STREAM_VERTEX_TEXTURECOORD4,  8 );
 CHashString hsz_MESH_STREAM_VERTEX_CUBECOORD1(_T("MESH_STREAM_VERTEX_CUBECOORD1"));
 ChannelDesc desc_MESH_STREAM_VERTEX_CUBECOORD1(&hsz_MESH_STREAM_VERTEX_CUBECOORD1,  12 );
 CHashString hsz_MESH_STREAM_VERTEX_CUBECOORD2(_T("MESH_STREAM_VERTEX_CUBECOORD2"));
 ChannelDesc desc_MESH_STREAM_VERTEX_CUBECOORD2(&hsz_MESH_STREAM_VERTEX_CUBECOORD2,  12 );
 CHashString hsz_MESH_STREAM_VERTEX_CUBECOORD3(_T("MESH_STREAM_VERTEX_CUBECOORD3"));
 ChannelDesc desc_MESH_STREAM_VERTEX_CUBECOORD3(&hsz_MESH_STREAM_VERTEX_CUBECOORD3,  12 );
 CHashString hsz_MESH_STREAM_VERTEX_CUBECOORD4(_T("MESH_STREAM_VERTEX_CUBECOORD4"));
 ChannelDesc desc_MESH_STREAM_VERTEX_CUBECOORD4(&hsz_MESH_STREAM_VERTEX_CUBECOORD4,  12 );
 CHashString hsz_MESH_STREAM_VERTEX_POSITIONRHW(_T("MESH_STREAM_VERTEX_POSITIONRHW"));
 ChannelDesc desc_MESH_STREAM_VERTEX_POSITIONRHW(&hsz_MESH_STREAM_VERTEX_POSITIONRHW,  16);
 CHashString hsz_MESH_STREAM_VERTEX_POSITION3(_T("MESH_STREAM_VERTEX_POSITION3"));
 ChannelDesc desc_MESH_STREAM_VERTEX_POSITION3(&hsz_MESH_STREAM_VERTEX_POSITION3,  12);
 CHashString hsz_MESH_STREAM_VERTEX_POSITION4(_T("MESH_STREAM_VERTEX_POSITION4"));
 ChannelDesc desc_MESH_STREAM_VERTEX_POSITION4(&hsz_MESH_STREAM_VERTEX_POSITION4,  16 );
 CHashString hsz_MESH_STREAM_VERTEX_COLORFRGBA(_T("MESH_STREAM_VERTEX_COLORFRGBA"));
 ChannelDesc desc_MESH_STREAM_VERTEX_COLORFRGBA(&hsz_MESH_STREAM_VERTEX_COLORFRGBA,  12 );
 CHashString hsz_MESH_STREAM_VERTEX_COLORCRGBA(_T("MESH_STREAM_VERTEX_COLORCRGBA"));
 ChannelDesc desc_MESH_STREAM_VERTEX_COLORCRGBA(&hsz_MESH_STREAM_VERTEX_COLORCRGBA,  4 );
 CHashString hsz_MESH_STREAM_VERTEX_SPECULARCRGBA(_T("MESH_STREAM_VERTEX_SPECULARCRGBA"));
 ChannelDesc desc_MESH_STREAM_VERTEX_SPECULARCRGBA(&hsz_MESH_STREAM_VERTEX_SPECULARCRGBA,  4 );
 CHashString hsz_MESH_STREAM_VERTEX_NORMAL(_T("MESH_STREAM_VERTEX_NORMAL"));
 ChannelDesc desc_MESH_STREAM_VERTEX_NORMAL(&hsz_MESH_STREAM_VERTEX_NORMAL,  12 );
 CHashString hsz_MESH_STREAM_VERTEX_TANGENT4(_T("MESH_STREAM_VERTEX_TANGENT4"));
 ChannelDesc desc_MESH_STREAM_VERTEX_TANGENT4(&hsz_MESH_STREAM_VERTEX_TANGENT4,  16 );
 CHashString hsz_MESH_STREAM_VERTEX_TANGENT3(_T("MESH_STREAM_VERTEX_TANGENT3"));
 ChannelDesc desc_MESH_STREAM_VERTEX_TANGENT3(&hsz_MESH_STREAM_VERTEX_TANGENT3,  12 );
 CHashString hsz_MESH_STREAM_TRIANGLELIST_INDICESUI(_T("MESH_STREAM_TRIANGLELIST_INDICESUI"));
 ChannelDesc desc_MESH_STREAM_TRIANGLELIST_INDICESUI(&hsz_MESH_STREAM_TRIANGLELIST_INDICESUI,  3*sizeof(unsigned short) );
 CHashString hsz_MESH_STREAM_WEIGHTS(_T("MESH_STREAM_WEIGHTS"));
 ChannelDesc desc_MESH_STREAM_WEIGHTS(&hsz_MESH_STREAM_WEIGHTS,  16 );
 CHashString hsz_MESH_STREAM_MATRIX_INDICES(_T("MESH_STREAM_MATRIX_INDICES"));
 ChannelDesc desc_MESH_STREAM_MATRIX_INDICES(&hsz_MESH_STREAM_MATRIX_INDICES,  16 );

} //namespace ElementalEngine
